{"version":3,"sources":["img/link_icon.svg","img/qr_code.svg","panels/HistoryItem.js","panels/QRcods.js","App.js","img/history.svg","index.js"],"names":["HistoryItem","props","superprops","link","this","linkify","history_item","value","isUrl","includes","className","src","link_icon","qr_code","React","Component","QRcods","onBridgeResult","e","setState","qrResult","state","detail","data","console","log","JSON","stringify","type","bridge","send","keys","historyResult","length","history","openScanner","undefined","subscribe","separator","onClick","size","stretched","style","marginTop","marginBottom","map","item","index","App","MainView","withAdaptivity","viewWidth","platform","usePlatform","useState","isDesktop","ViewWidth","TABLET","hasHeader","VKCOM","header","justifyContent","animate","spaced","width","maxWidth","id","activePanel","ReactDOM","render","document","getElementById"],"mappings":"yPAAe,MAA0B,sCCA1B,MAA0B,oC,OCuCxBA,E,4CAlChB,WAAYC,GAAM,2BACjBC,WADiB,uB,0CAoBlB,WACO,IAAMC,EAAOC,KAAKC,QAAQD,KAAKH,MAAMK,aAAaC,OAC5CC,EAAQL,EAAKM,SAAS,QAC5B,OACI,sBAAKC,UAAU,eAAf,UACI,qBAAKC,IAAKH,EAAQI,EAAYC,IAC9B,gCACI,mBAAGH,UAAU,qBAAb,SAAmCF,EAAQ,uCAAW,mCACrDA,EAAQL,EAAO,mBAAGO,UAAU,oBAAb,SAAkCN,KAAKH,MAAMK,aAAaC,kB,GA9BpEO,IAAMC,WC2EfC,E,kDAvEhB,aAAc,IAAD,8BACN,gBAUJC,eAAiB,SAACC,GAGd,OAFA,EAAKC,SAAS,CAACC,SAAY,EAAKC,MAAMD,SAAWF,EAAEI,OAAOC,OAC1DC,QAAQC,IAAI,cAAgBC,KAAKC,UAAUT,IACnCA,EAAEI,OAAOM,MAqBb,QACA,MAXA,IAAK,+BACDC,IAAOC,KAAK,qBAAsB,CAAC,KAAQZ,EAAEI,OAAOC,KAAKQ,OAC7D,MACA,IAAK,2BACD,IAAMC,EAAgBd,EAAEI,OAAOC,KAAKQ,KAChCC,EAAcC,OAAS,GACvB,EAAKd,SAAS,CAACe,QAAUF,MA/B/B,EAuCVG,YAAc,WACVN,IAAOC,KAAK,2BAtCZ,EAAKT,MAAQ,CACTD,cAAWgB,EACXF,QAAU,IAJR,E,qDAOV,WACIL,IAAOQ,UAAUjC,KAAKa,gBACtBY,IAAOC,KAAK,yBAA0B,CAAC,MAAS,IAAK,OAAU,M,oBAyCtE,WACE,OACD,sBAAKpB,UAAU,oBAAf,UACU,cAAC,IAAD,CAAa4B,WAAW,EAAxB,yCACA,qBAAK5B,UAAU,YAAf,SACI,cAAC,IAAD,CAAQ6B,QAASnC,KAAK+B,YAAaK,KAAK,IAAIC,WAAS,EAACC,MAAO,CAAEC,UAAW,GAAIC,aAAe,IAA7F,wGAGJ,cAAC,IAAD,IACCxC,KAAKiB,MAAMa,QAAQD,OAAS,GAAK,gCAC9B,oBAAGvB,UAAU,WAAb,8FAAyCN,KAAKiB,MAAMa,QAAQD,UAC3D7B,KAAKiB,MAAMa,QAAQW,KAAI,SAACC,EAAMC,GAAP,OACpB,cAAC,EAAD,CAAcA,MAAOA,EAAOzC,aAAcwC,GAAWC,SAI5D3C,KAAKiB,MAAMD,UAAY,4BAAIM,KAAKC,UAAUvB,KAAKiB,MAAMD,mB,GApE7CN,IAAMC,WCGrBiC,GCRS,I,kDDUd,aAAc,wC,0CAId,WACE,OACD,cAAC,IAAD,UACC,cAAC,IAAD,UACC,cAACC,EAAD,Y,GAVcnC,IAAMC,YAiBPiC,IAETC,EAAWC,aAAe,YAAoB,IAAjBC,EAAgB,EAAhBA,UAC9BC,EAAWC,cACjB,EAAsCvC,IAAMwC,SAAS,WAArD,mBAEMC,GAFN,UAEkBJ,GAAaK,IAAUC,QACnCC,EAAYN,IAAaO,IAE/B,OACE,cAAC,IAAD,CACDC,OAAQF,GAAa,cAAC,IAAD,CAAapB,WAAW,IAC7CI,MAAO,CAAEmB,eAAgB,UAFxB,SAMD,cAAC,IAAD,CACEC,SAAUP,EACVQ,OAAQR,EACRS,MAAOT,EAAY,QAAU,OAC7BU,SAAUV,EAAY,QAAU,OAJlC,SAwCE,cAAC,IAAD,CAAMW,GAAG,UAAUC,YAAY,UAA/B,SACC,cAAC,IAAD,CAAOD,GAAG,UAAV,SACD,cAAC,EAAD,cAMC,CACJf,WAAW,IAIViB,IAASC,OACV,cAAC,EAAD,IAECC,SAASC,eAAe,SE3F1B1C,IAAOC,KAAK,gBAEZsC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9e92bec8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/link_icon.eb89ac93.svg\";","export default __webpack_public_path__ + \"static/media/qr_code.96c76ad6.svg\";","import React from 'react';\nimport link_icon from '../img/link_icon.svg'\nimport qr_code from '../img/qr_code.svg'\nclass HistoryItem extends React.Component {\n   \n\tconstructor(props){\n\t\tsuperprops\n\t}\n    linkify = (inputText) => {\n        var replacedText, replacePattern1, replacePattern2, replacePattern3;\n    \n        //URLs starting with http://, https://, or ftp://\n        replacePattern1 = /(\\b(https?|ftp):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/gim;\n        replacedText = inputText.replace(replacePattern1, '<a href=\"$1\" target=\"_blank\">$1</a>');\n    \n        //URLs starting with \"www.\" (without // before it, or it'd re-link the ones done above).\n        replacePattern2 = /(^|[^\\/])(www\\.[\\S]+(\\b|$))/gim;\n        replacedText = replacedText.replace(replacePattern2, '$1<a href=\"http://$2\" target=\"_blank\">$2</a>');\n    \n        //Change email addresses to mailto:: links.\n        replacePattern3 = /(([a-zA-Z0-9\\-\\_\\.])+@[a-zA-Z\\_]+?(\\.[a-zA-Z]{2,6})+)/gim;\n        replacedText = replacedText.replace(replacePattern3, '<a href=\"mailto:$1\">$1</a>');\n    \n        return replacedText;\n    }\n\trender() {\n        const link = this.linkify(this.props.history_item.value)\n        const isUrl = link.includes(\"</a>\")\n        return (\n            <div className=\"history_item\">\n                <img src={isUrl ? link_icon : qr_code}/>\n                <div>\n                    <p className=\"history_item_title\">{isUrl ? \"Ссылка\" : \"Текст\"}</p>\n                    {isUrl ? link : <p className=\"history_item_text\">{this.props.history_item.value}</p>}\n                </div>\n            </div>\n        )\n\t}\n  }\n  export default HistoryItem;","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Button, Separator, PanelHeader } from '@vkontakte/vkui';\nimport HistoryItem from './HistoryItem';\n\nclass QRcods extends React.Component {\n   \n\tconstructor(){\n        super()\n        this.state = {\n            qrResult : undefined,\n            history : []\n        }\n    }\n    componentDidMount(){\n        bridge.subscribe(this.onBridgeResult);\n        bridge.send(\"VKWebAppStorageGetKeys\", {\"count\": 100, \"offset\": 0})\n    }\n    onBridgeResult = (e) => {\n        this.setState({qrResult : (this.state.qrResult + e.detail.data)})\n        console.log(\"bridge e = \" + JSON.stringify(e))\n        switch (e.detail.type) {\n            case \"VKWebAppOpenCodeReaderResult\":\n                //const dataItem = {\"key\" : e.detail.data._id, \"value\" : e.detail.data.code_data}\n                //var history = this.state.history\n                //history.push(dataItem)\n                //this.setState({history : history})\n                //bridge.send(\"VKWebAppStorageSet\", dataItem)\n            break;\n            case \"VKWebAppOpenCodeReaderFailed\":\n                \n            break;\n            case \"VKWebAppStorageGetKeysResult\":\n                bridge.send(\"VKWebAppStorageGet\", {\"keys\": e.detail.data.keys});\n            break;\n            case \"VKWebAppStorageGetResult\":\n                const historyResult = e.detail.data.keys\n                if (historyResult.length > 0){\n                    this.setState({history : historyResult})\n                }\n            break;            \n      \n            default:\n            break;\n        }\n    }\n    openScanner = () => {\n        bridge.send(\"VKWebAppOpenCodeReader\")\n        // .then(data => { \n        //         this.setState({flashDetails : \"\"})\n        // }) \n        // .catch(error => { \n        //     this.setState({flashDetails : \"Нет доступа к Камере\"})\n        // });\n    }\n    \n    //this.detectUrl(e.detail.data.code_data) == 'url' ? 0 : 1\n\trender() {\n\t  return (\n\t\t<div className=\"qrcodes_container\">\n            <PanelHeader separator={false}>QR-коды</PanelHeader>\t\n            <div className=\"qr_button\">\n                <Button onClick={this.openScanner} size=\"l\" stretched style={{ marginTop: 16, marginBottom : 28 }}>Сканировать QR-код</Button>\n            </div>\n            \n            <Separator />\n            {this.state.history.length > 0 && <div>\n                <p className=\"qr_count\">Отсканировано : {this.state.history.length}</p>\n                {this.state.history.map((item, index) => (\n                    <HistoryItem  index={index} history_item={item} key={index} />\n                ))}\n            </div>}\n            \n            {this.state.qrResult && <p>{JSON.stringify(this.state.qrResult)}</p>}\n        </div>\n\t  )\n\t}\n  }\n  export default QRcods;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { View, ScreenSpinner, Tabbar, TabbarItem, Epic ,AdaptivityProvider, AppRoot, withAdaptivity, usePlatform, ViewWidth, VKCOM, SplitLayout, SplitCol,Group, Panel, Cell, PanelHeader, Title } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './styles/styles.css'\nimport QRcods from './panels/QRcods';\nimport qr_code from './img/qr_code.svg'\nimport history from './img/history.svg'\nclass App extends React.Component {\n   \n\tconstructor(){\n\t\tsuper()\n\t}\n\n\trender() {\n\t  return (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<MainView/>\n\t\t\t\t\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t  )\n\t}\n  }\n  export default App;\n  \n  const MainView = withAdaptivity(({ viewWidth }) => {\n\tconst platform = usePlatform();\n\tconst [activeStory, setActiveStory] = React.useState('scanner');\n\tconst onStoryChange = (e) => setActiveStory(e.currentTarget.dataset.story);\n\tconst isDesktop = viewWidth >= ViewWidth.TABLET;\n\tconst hasHeader = platform !== VKCOM;\n  \n\treturn (\n\t  <SplitLayout\n\t\theader={hasHeader && <PanelHeader separator={false} />}\n\t\tstyle={{ justifyContent: \"center\" }}\n\t  >\n\t\t\n  \n\t\t<SplitCol\n\t\t  animate={!isDesktop}\n\t\t  spaced={isDesktop}\n\t\t  width={isDesktop ? '560px' : '100%'}\n\t\t  maxWidth={isDesktop ? '560px' : '100%'}\n\t\t>\n\t\t  {/* <Epic activeStory={activeStory} tabbar={!isDesktop &&\n\t\t\t<Tabbar>\n\t\t\t  <TabbarItem\n\t\t\t\tonClick={onStoryChange}\n\t\t\t\tselected={activeStory === 'scanner'}\n\t\t\t\tdata-story=\"scanner\"\n\t\t\t\ttext=\"QR-коды\"\n\t\t\t  ><img src={qr_code}/>\n\t\t\t</TabbarItem>\n\t\t\t  <TabbarItem\n\t\t\t\tonClick={onStoryChange}\n\t\t\t\tselected={activeStory === 'history'}\n\t\t\t\tdata-story=\"history\"\n\t\t\t\ttext=\"История\"\n\t\t\t  > <img src={history}/>\n\t\t\t  </TabbarItem>\n\t\t\t \n\t\t\t</Tabbar>\n\t\t  }>\n\t\t\t<View id=\"scanner\" activePanel=\"scanner\">\n\t\t\t  <Panel id=\"scanner\">\n\t\t\t\t<QRcods/>\n\t\t\t  </Panel>\n\t\t\t</View>\n\t\t\t<View id=\"history\" activePanel=\"history\">\n\t\t\t  <Panel id=\"history\">\n\t\t\t\t<PanelHeader>История</PanelHeader>\n\t\t\t\t<Group style={{ height: '1000px' }}>\n\t\t\t\t  \n\t\t\t\t</Group>\n\t\t\t  </Panel>\n\t\t\t</View>\n\t\t\t\n\t\t  </Epic> */}\n\t\t  <View id=\"scanner\" activePanel=\"scanner\">\n\t\t\t  <Panel id=\"scanner\">\n\t\t\t\t<QRcods/>\n\t\t\t  </Panel>\n\t\t\t</View>\n\t\t</SplitCol>\n\t  </SplitLayout>\n\t);\n  }, {\n\tviewWidth: true\n  });\n  \n  <MainView />\n  ReactDOM.render(\n\t<App/>\n  ,\n  document.getElementById('root')\n  );","export default __webpack_public_path__ + \"static/media/history.f8a4b063.svg\";","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}